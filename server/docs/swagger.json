{
  "swagger": "2.0",
  "info": {
    "title": "Bus Booking System API",
    "version": "1.0.0",
    "description": "API Documentation for Bus Booking System"
  },
  "host": "janusha-api-bus.netlify.app",
  "basePath": "/api",
  "schemes": ["https"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format: Bearer <token>"
    }
  },
  "paths": {
    "/booking/bookings": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Fetch all Bookings",
        "tags": ["Booking"],
        "responses": {
          "200": {
            "description": "List of all Bookings",
            "schema": {
              "type": "array"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "security": [{"Bearer": []}],
        "description": "Add a new Booking",
        "tags": ["Booking"],
        "parameters": [
          {
            "name": "Booking",
            "in": "body",
            "description": "Details of the Booking to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Booking added successfully",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/booking/bookings/{id}": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Get Booking details by Booking ID",
        "tags": ["Booking"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the Booking",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Booking details",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "security": [{"Bearer": []}],
        "description": "Update a Booking",
        "tags": ["Booking"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the Booking to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "Booking",
            "in": "body",
            "description": "Updated details of the Booking",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking updated successfully",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "security": [{"Bearer": []}],
        "description": "Delete a Booking",
        "tags": ["Booking"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the Booking to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Booking deleted successfully"
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "description": "Create a new user account",
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "description": "User details for signup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User account created successfully"
          },
          "400": {
            "description": "Invalid input or user already exists"
          },
          "404": {
            "description": "Invalid organization registered ID"
          },
          "409": {
            "description": "User with given NIC or email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "description": "User login to get a JWT token",
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "Credentials",
            "in": "body",
            "description": "User credentials (email and password)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JWT token for the logged-in user"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "description": "Logs out the user by clearing the authentication cookie",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Successfully logged out and cookie cleared"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/bus/buses": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Fetch all buses",
        "tags": ["Bus"],
        "responses": {
          "200": {
            "description": "List of all buses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bus"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "description": "Add a new bus",
        "security": [{"Bearer": []}],
        "tags": ["Bus"],
        "parameters": [
          {
            "name": "Bus",
            "in": "body",
            "description": "Details of the bus to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Bus added successfully",
            "schema": {
              "$ref": "#/definitions/Bus"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/bus/buses/type": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Get buses by type (e.g. Luxury, Normal)",
        "tags": ["Bus"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of bus (Luxury or Normal)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of buses matching the bus type",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bus"
              }
            }
          },
          "400": {
            "description": "Bus type is required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/bus/buses/route": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Get buses by route",
        "tags": ["Bus"],
        "parameters": [
          {
            "name": "route",
            "in": "query",
            "description": "Route name of the bus",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of buses matching the route",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bus"
              }
            }
          },
          "400": {
            "description": "Route is required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/bus/buses/organization": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Get buses by organization",
        "tags": ["Bus"],
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "description": "Organization ID that the bus belongs to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of buses from the specified organization",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bus"
              }
            }
          },
          "400": {
            "description": "Organization ID is required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/bus/buses/{id}": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Get bus details by bus number",
        "tags": ["Bus"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the bus",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Bus details",
            "schema": {
              "$ref": "#/definitions/Bus"
            }
          },
          "404": {
            "description": "Bus not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "security": [{"Bearer": []}],
        "description": "Update a bus",
        "tags": ["Bus"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the bus to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "Bus",
            "in": "body",
            "description": "Updated details of the bus",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bus updated successfully",
            "schema": {
              "$ref": "#/definitions/Bus"
            }
          },
          "404": {
            "description": "Bus not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "security": [{"Bearer": []}],
        "description": "Delete a bus",
        "tags": ["Bus"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the bus to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Bus deleted successfully"
          },
          "404": {
            "description": "Bus not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/bus/busroutes/by-name": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Fetch bus routes by route name",
        "tags": [
          "BusRoutes"
        ],
        "parameters": [
          {
            "name": "routeName",
            "in": "query",
            "description": "Name of the bus route",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of bus routes matching the route name",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusRoute"
              }
            }
          },
          "400": {
            "description": "Route name is required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/bus/busroutes/by-location": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Fetch bus routes by start or end location",
        "tags": [
          "BusRoutes"
        ],
        "parameters": [
          {
            "name": "startLocation",
            "in": "query",
            "description": "Starting location of the bus route",
            "required": false,
            "type": "string"
          },
          {
            "name": "endLocation",
            "in": "query",
            "description": "Ending location of the bus route",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of bus routes matching the start or end location",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusRoute"
              }
            }
          },
          "400": {
            "description": "Either startLocation or endLocation is required"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/bus/busroutes": {
      "post": {
        "security": [{"Bearer": []}],
        "description": "Add a new bus route",
        "tags": [
          "BusRoutes"
        ],
        "parameters": [
          {
            "name": "BusRoute",
            "in": "body",
            "description": "Details of the bus route to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusRouteInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Bus route added successfully",
            "schema": {
              "$ref": "#/definitions/BusRoute"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "security": [{"Bearer": []}],
        "description": "Update an existing bus route",
        "tags": [
          "BusRoutes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the bus route to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "BusRoute",
            "in": "body",
            "description": "Updated details of the bus route",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusRouteInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bus route updated successfully",
            "schema": {
              "$ref": "#/definitions/BusRoute"
            }
          },
          "404": {
            "description": "Bus route not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/booking/seats": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Fetch all seats",
        "tags": ["Seat"],
        "responses": {
          "200": {
            "description": "List of all seats",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Seat"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "security": [{"Bearer": []}],
        "description": "Add a new seat",
        "tags": ["Seat"],
        "parameters": [
          {
            "name": "Seat",
            "in": "body",
            "description": "Details of the seat to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SeatInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Seat added successfully",
            "schema": {
              "$ref": "#/definitions/Seat"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/booking/seats/{id}": {
      "get": {
        "security": [{"Bearer": []}],
        "description": "Get seat details by seat ID",
        "tags": ["Seat"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the seat",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Seat details",
            "schema": {
              "$ref": "#/definitions/Seat"
            }
          },
          "404": {
            "description": "Seat not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "security": [{"Bearer": []}],
        "description": "Update a seat",
        "tags": ["Seat"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the seat to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "Seat",
            "in": "body",
            "description": "Updated details of the seat",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SeatInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Seat updated successfully",
            "schema": {
              "$ref": "#/definitions/Seat"
            }
          },
          "404": {
            "description": "Seat not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "security": [{"Bearer": []}],
        "description": "Delete a seat",
        "tags": ["Seat"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the seat to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Seat deleted successfully"
          },
          "404": {
            "description": "Seat not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
   },
       "/bus/schedules": {
    "get": {
      "security": [{"Bearer": []}],
      "description": "Fetch all schedules",
      "tags": ["Schedules"],
      "responses": {
        "200": {
          "description": "List of all bus schedules",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Schedule"
            }
          }
        },
        "404": {
          "description": "No schedules found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    },
    "post": {
      "description": "Add a new bus schedule",
      "tags": ["Schedules"],
      "parameters": [
        {
          "name": "Schedule",
          "in": "body",
          "description": "Details of the bus schedule to add",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ScheduleInput"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Schedule added successfully",
          "schema": {
            "$ref": "#/definitions/ScheduleResponse"
          }
        },
        "400": {
          "description": "Invalid input"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  },
  "/bus/schedules/{id}": {
    "put": {
      "security": [{"Bearer": []}],
      "description": "Update an existing bus schedule",
      "tags": ["Schedules"],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "ID of the schedule to update",
          "required": true,
          "type": "string"
        },
        {
          "name": "Schedule",
          "in": "body",
          "description": "Updated schedule details",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ScheduleInput"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Schedule updated successfully",
          "schema": {
            "$ref": "#/definitions/ScheduleResponse"
          }
        },
        "400": {
          "description": "Invalid input or invalid schedule ID"
        },
        "404": {
          "description": "Schedule not found"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  },
   
  
   
   "definitions": {
    "User": {
      "type": "object",
      "required": ["NICnumber", "fullName", "email", "password", "roleID"],
      "properties": {
        "NICnumber": {
          "type": "string",
          "description": "User's unique National Identity Card number"
        },
        "fullName": {
          "type": "string",
          "description": "Full name of the user"
        },
        "email": {
          "type": "string",
          "description": "Email address of the user"
        },
        "password": {
          "type": "string",
          "description": "User's password (must meet complexity requirements)"
        },
        "roleID": {
          "type": "string",
          "description": "ID of the role assigned to the user"
        },
        "contactNumber": {
          "type": "string",
          "description": "Contact number of the user"
        },
        "organizationRegisteredId": {
          "type": "string",
          "description": "Organization ID if the user is an operator (optional)"
        }
      }
    },
    "Credentials": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address of the user"
        },
        "password": {
          "type": "string",
          "description": "User's password"
        }
      }
    },
    "Booking": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Booking"
        },
        "userId": {
          "type": "string",
          "description": "User ID associated with the Booking"
        },
        "tripId": {
          "type": "string",
          "description": "Trip ID associated with the Booking"
        },
        "seatId": {
          "type": "string",
          "description": "Seat ID associated with the Booking"
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the Booking"
        },
        "bookingStatus": {
          "type": "string",
          "enum": ["Confirmed", "Cancelled"],
          "description": "Status of the Booking"
        }
      }
    },
    "BookingInput": {
      "type": "object",
      "required": ["userId", "tripId", "seatId", "bookingStatus"],
      "properties": {
        "userId": {
          "type": "string",
          "description": "User ID associated with the Booking"
        },
        "tripId": {
          "type": "string",
          "description": "Trip ID associated with the Booking"
        },
        "seatId": {
          "type": "string",
          "description": "Seat ID associated with the Booking"
        },
        "bookingStatus": {
          "type": "string",
          "enum": ["Confirmed", "Cancelled"],
          "description": "Status of the Booking"
        }
      }
    },

    "Bus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the bus"
        },
        "busNumber": {
          "type": "string",
          "description": "Bus number"
        },
        "permitNo": {
          "type": "string",
          "description": "Permit number"
        },
        "type": {
          "type": "string",
          "enum": ["Luxury", "Normal"],
          "description": "Type of the bus"
        },
        "capacity": {
          "type": "integer",
          "description": "Bus capacity"
        },
        "operatorId": {
          "type": "string",
          "description": "Operator ID of the bus"
        },
        "driverId": {
          "type": "string",
          "description": "Driver ID of the bus"
        },
        "conductorId": {
          "type": "string",
          "description": "Conductor ID of the bus"
        },
        "organizationId": {
          "type": "string",
          "description": "Organization ID of the bus"
        },
        "seatPrice": {
          "type": "number",
          "description": "Seat price of the bus"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number associated with the bus"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the bus"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Update timestamp of the bus"
        }
      }
    },
    "BusInput": {
      "type": "object",
      "required": [
        "busNumber",
        "permitNo",
        "type",
        "capacity",
        "operatorId",
        "driverId",
        "conductorId",
        "organizationId",
        "seatPrice"
      ],
      "properties": {
        "busNumber": {
          "type": "string",
          "description": "Bus number"
        },
        "permitNo": {
          "type": "string",
          "description": "Permit number"
        },
        "type": {
          "type": "string",
          "enum": ["Luxury", "Normal"],
          "description": "Type of the bus"
        },
        "capacity": {
          "type": "integer",
          "description": "Bus capacity"
        },
        "operatorId": {
          "type": "string",
          "description": "Operator ID of the bus"
        },
        "driverId": {
          "type": "string",
          "description": "Driver ID of the bus"
        },
        "conductorId": {
          "type": "string",
          "description": "Conductor ID of the bus"
        },
        "organizationId": {
          "type": "string",
          "description": "Organization ID of the bus"
        },
        "seatPrice": {
          "type": "number",
          "description": "Seat price of the bus"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number associated with the bus"
        }
      }
    },
   "BusRoute": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the bus route"
        },
        "routeName": {
          "type": "string",
          "description": "Name of the bus route"
        },
        "startLocation": {
          "type": "string",
          "description": "Starting location of the bus route"
        },
        "endLocation": {
          "type": "string",
          "description": "Ending location of the bus route"
        },
        "distance": {
          "type": "number",
          "description": "Distance of the bus route in kilometers"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the bus route"
        }
      }
    },
    "BusRouteInput": {
      "type": "object",
      "required": [
        "routeName",
        "startLocation",
        "endLocation",
        "distance"
      ],
      "properties": {
        "routeName": {
          "type": "string",
          "description": "Name of the bus route"
        },
        "startLocation": {
          "type": "string",
          "description": "Starting location of the bus route"
        },
        "endLocation": {
          "type": "string",
          "description": "Ending location of the bus route"
        },
        "distance": {
          "type": "number",
          "description": "Distance of the bus route in kilometers"
        }
      }
    },
    "Seat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the seat"
        },
        "seatId": {
          "type": "string",
          "description": "Seat ID in the format YYYYMMDD_TripID_SeatNumber"
        },
        "busId": {
          "type": "string",
          "description": "Bus ID associated with the seat"
        },
        "tripId": {
          "type": "string",
          "description": "Trip ID associated with the seat"
        },
        "seatNumber": {
          "type": "string",
          "description": "Seat number with a maximum length of 10 characters"
        },
        "userNIC": {
          "type": "string",
          "description": "National ID Card number of the user"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the user"
        },
        "status": {
          "type": "string",
          "enum": ["Available", "Booked"],
          "description": "Current status of the seat"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of seat creation"
        }
      }
    },
    "SeatInput": {
      "type": "object",
      "required": [
        "seatId",
        "busId",
        "tripId",
        "seatNumber",
        "status"
      ],
      "properties": {
        "seatId": {
          "type": "string",
          "description": "Seat ID in the format YYYYMMDD_TripID_SeatNumber"
        },
        "busId": {
          "type": "string",
          "description": "Bus ID associated with the seat"
        },
        "tripId": {
          "type": "string",
          "description": "Trip ID associated with the seat"
        },
        "seatNumber": {
          "type": "string",
          "description": "Seat number with a maximum length of 10 characters"
        },
        "userNIC": {
          "type": "string",
          "description": "National ID Card number of the user"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the user"
        },
        "status": {
          "type": "string",
          "enum": ["Available", "Booked"],
          "description": "Current status of the seat"
        }
      }
    }

  },
 "Schedule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the schedule"
        },
        "bus": {
          "type": "string",
          "description": "Bus associated with the schedule"
        },
        "route": {
          "type": "string",
          "description": "Route for the schedule"
        },
        "departureTime": {
          "type": "string",
          "format": "date-time",
          "description": "Departure time of the bus schedule"
        },
        "arrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Arrival time of the bus schedule"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the schedule"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated timestamp of the schedule"
        }
      }
    },
    "ScheduleInput": {
      "type": "object",
      "required": ["bus", "route", "departureTime", "arrivalTime"],
      "properties": {
        "bus": {
          "type": "string",
          "description": "Bus associated with the schedule"
        },
        "route": {
          "type": "string",
          "description": "Route for the schedule"
        },
        "departureTime": {
          "type": "string",
          "format": "date-time",
          "description": "Departure time of the bus schedule"
        },
        "arrivalTime": {
          "type": "string",
          "format": "date-time",
          "description": "Arrival time of the bus schedule"
        }
      }
    },
    "ScheduleResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Indicates whether the request was successful"
        },
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the resource",
              "example": "schedule"
            },
            "id": {
              "type": "string",
              "description": "Schedule ID"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "bus": {
                  "type": "string",
                  "description": "Bus ID"
                },
                "route": {
                  "type": "string",
                  "description": "Route ID"
                },
                "departureTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Departure time"
                },
                "arrivalTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Arrival time"
                }
              }
            }
          }
        }
      }
    }
  }
}

  

